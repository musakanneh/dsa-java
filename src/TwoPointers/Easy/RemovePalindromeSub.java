package TwoPointers.Easy;

/***
 * You are given a string s consisting only of letters 'a' and 'b'.
 * In a single step you can remove one palindromic subsequence from s.
 *
 * Return the minimum number of steps to make the given string empty.
 *
 * A string is a subsequence of a given string if it is generated by deleting
 * some characters of a given string without changing its order.
 * Note that a subsequence does not necessarily need to be contiguous.
 *
 * A string is called palindrome if is one that reads the same backward as well as forward.
 *
 * https://leetcode.com/problems/remove-palindromic-subsequences/
 */
public class RemovePalindromeSub {
    public static void main(String[] args) {
        System.out.println(removePalindromeSub("abb"));
    }

    static int removePalindromeSub(String s) {
        int left = 0, right = s.length() - 1;

        while (left < right) {
            if (s.charAt(left) == s.charAt(right)) {
                left++; right--;
            } else {
                return 2;
            }
        }
        return 1;
    }
}